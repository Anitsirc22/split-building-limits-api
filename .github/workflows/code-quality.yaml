# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
name: Code Quality
on:
  pull_request: {}
  push:
    branches: [main]

jobs:
  code-quality:
    name: Code Quality
    strategy:
      matrix:
        platform: [ubuntu-latest]
        python-version: ["3.10"]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install poetry
          poetry install

      - name: Code checks
        run: |
          poetry run pre-commit run --all-files --show-diff-on-failure

  tests:
    name: Tests
    strategy:
        matrix:
            platform: [ubuntu-latest, macos-latest, windows-latest]
            python-version: ["3.9", "3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.platform }}
    env:
      SECRET_PASSWORD: ${{ secrets.MY_SECRET_PASSWORD }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
          # setup-python uses by default poetry.lock hash as part of the cache key.

      - name: Install dependencies
        run: |
          pipx install poetry
          poetry install

      - name: Run Core Tests
        run: poetry run pytest -m core --cov-report=xml --junitxml=test-results.xml

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Unit Test Results (Python ${{ matrix.python-version }})
          path: test-results.xml

  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: code-quality
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: artifacts/**/test-results.xml
          check_name: Unit Test Results
