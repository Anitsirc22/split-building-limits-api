[tool.poetry]
name = "split-building-limits-api"
version = "0.1.0"
description = "API that splits up building limits according to height plateaus and persists the results."
authors = ["Cristina Ferrer Teixidor"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10.6, <3.12"
fastapi = "^0.99.1"
uvicorn = {extras = ["standard"], version = "^0.22.0"}
geopandas = "^0.13.2"
geojson = "^3.0.1"
psycopg = "^3.1.9"
pytest-asyncio = "^0.21.0"


[tool.poetry.group.dev.dependencies]
matplotlib = "^3.7.1"
notebook = "^6.5.4"
pytest = "^7.4.0"
httpx = "^0.24.1"
requests = "^2.31.0"
pre-commit = "^3.3.3"
shapely = "^2.0.1"
black = "^23.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Keep in sync with .pre-commit-config.yaml
line-length = 120
# E501: line too long
# E731: do not assign a lambda expression, use a def
# W605: invalid escape sequence
# D100: Missing docstring in public module
# D101: Missing docstring in public class, pydantic complains
# D102: Missing docstring in public method, pydantic complains
# D103: Missing docstring in public function
# D104: Missing docstring in public package
# D105: Missing docstring in magic method
# D106: Missing docstring in public nested class, pydantic complains
# RUF002: Missing docstring in public function
# UP006:  Use `list` instead of `List` for type annotations
# UP007:  Use `X | Y` for type annotations
# I001: Import block is un-sorted or un-formatted, conflicting with black
ignore = ["E501", "E731", "W605","D100", "D101", "D102", "D103", "D104", "D105", "D106", "RUF002", "UP006", "UP007", "UP035", "I001"]
target-version = "py38"
select = ["E", "W",  "F", "I", "T", "RUF", "TID", "UP"]
exclude = []

[tool.ruff.pydocstyle]
convention = "google"
[tool.ruff.isort]
lines-after-imports = 2
lines-between-types = 1
split-on-trailing-comma = false
known-third-party = ["pytest"]
